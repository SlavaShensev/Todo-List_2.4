[{"E:\\Work\\Projects\\online_IT_kamasutra\\Todo_2.4\\src\\App.tsx":"1","E:\\Work\\Projects\\online_IT_kamasutra\\Todo_2.4\\src\\stories\\todolists-api.stories.tsx":"2","E:\\Work\\Projects\\online_IT_kamasutra\\Todo_2.4\\src\\Todolist.tsx":"3","E:\\Work\\Projects\\online_IT_kamasutra\\Todo_2.4\\src\\api\\todolist-api.ts":"4"},{"size":4777,"mtime":1611420546000,"results":"5","hashOfConfig":"6"},{"size":3047,"mtime":1620048665836,"results":"7","hashOfConfig":"6"},{"size":3487,"mtime":1611420546000,"results":"8","hashOfConfig":"6"},{"size":2110,"mtime":1620047083124,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12","usedDeprecatedRules":"13"},"1nkugmq",{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Work\\Projects\\online_IT_kamasutra\\Todo_2.4\\src\\App.tsx",["20","21","22","23","24","25","26","27","28","29","30","31","32"],"import React, {useCallback, useReducer, useState} from 'react'\r\nimport './App.css';\r\nimport {TaskType, Todolist} from './Todolist';\r\nimport {v1} from 'uuid';\r\nimport {AddItemForm} from './AddItemForm';\r\nimport {AppBar, Button, Container, Grid, IconButton, Paper, Toolbar, Typography} from '@material-ui/core';\r\nimport {Menu} from '@material-ui/icons';\r\nimport {\r\n    addTodolistAC,\r\n    changeTodolistFilterAC,\r\n    changeTodolistTitleAC,\r\n    removeTodolistAC,\r\n    todolistsReducer\r\n} from './state/todolists-reducer';\r\nimport {addTaskAC, changeTaskStatusAC, changeTaskTitleAC, removeTaskAC, tasksReducer} from './state/tasks-reducer';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from './state/store';\r\n\r\nexport type FilterValuesType = \"all\" | \"active\" | \"completed\";\r\nexport type TodolistType = {\r\n    id: string\r\n    title: string\r\n    filter: FilterValuesType\r\n}\r\n\r\nexport type TasksStateType = {\r\n    [key: string]: Array<TaskType>\r\n}\r\n\r\n\r\nfunction App() {\r\n    let todolistId1 = v1();\r\n    let todolistId2 = v1();\r\n\r\n    const todolists = useSelector<AppRootStateType, Array<TodolistType>>(state => state.todolists)\r\n    const tasks = useSelector<AppRootStateType, TasksStateType>(state => state.tasks)\r\n    const dispatch = useDispatch();\r\n\r\n    const removeTask = useCallback(function (id: string, todolistId: string) {\r\n        const action = removeTaskAC(id, todolistId);\r\n        dispatch(action);\r\n    }, []);\r\n\r\n    const addTask = useCallback(function (title: string, todolistId: string) {\r\n        const action = addTaskAC(title, todolistId);\r\n        dispatch(action);\r\n    }, []);\r\n\r\n    const changeStatus = useCallback(function (id: string, isDone: boolean, todolistId: string) {\r\n        const action = changeTaskStatusAC(id, isDone, todolistId);\r\n        dispatch(action);\r\n    }, []);\r\n\r\n    const changeTaskTitle = useCallback(function (id: string, newTitle: string, todolistId: string) {\r\n        const action = changeTaskTitleAC(id, newTitle, todolistId);\r\n        dispatch(action);\r\n    }, []);\r\n\r\n    const changeFilter = useCallback(function (value: FilterValuesType, todolistId: string) {\r\n        const action = changeTodolistFilterAC(todolistId, value);\r\n        dispatch(action);\r\n    }, []);\r\n\r\n    const removeTodolist = useCallback(function (id: string) {\r\n        const action = removeTodolistAC(id);\r\n        dispatch(action);\r\n    }, []);\r\n\r\n    const changeTodolistTitle = useCallback(function (id: string, title: string) {\r\n        const action = changeTodolistTitleAC(id, title);\r\n        dispatch(action);\r\n    }, []);\r\n\r\n    const addTodolist = useCallback((title: string) => {\r\n        const action = addTodolistAC(title);\r\n        dispatch(action);\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\r\n                        <Menu/>\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\">\r\n                        News\r\n                    </Typography>\r\n                    <Button color=\"inherit\">Login</Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Container fixed>\r\n                <Grid container style={{padding: \"20px\"}}>\r\n                    <AddItemForm addItem={addTodolist}/>\r\n                </Grid>\r\n                <Grid container spacing={3}>\r\n                    {\r\n                        todolists.map(tl => {\r\n                            let allTodolistTasks = tasks[tl.id];\r\n\r\n                            return <Grid item key={tl.id}>\r\n                                <Paper style={{padding: \"10px\"}}>\r\n                                    <Todolist\r\n                                        id={tl.id}\r\n                                        title={tl.title}\r\n                                        tasks={allTodolistTasks}\r\n                                        removeTask={removeTask}\r\n                                        changeFilter={changeFilter}\r\n                                        addTask={addTask}\r\n                                        changeTaskStatus={changeStatus}\r\n                                        filter={tl.filter}\r\n                                        removeTodolist={removeTodolist}\r\n                                        changeTaskTitle={changeTaskTitle}\r\n                                        changeTodolistTitle={changeTodolistTitle}\r\n                                    />\r\n                                </Paper>\r\n                            </Grid>\r\n                        })\r\n                    }\r\n                </Grid>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n",["33","34"],"E:\\Work\\Projects\\online_IT_kamasutra\\Todo_2.4\\src\\stories\\todolists-api.stories.tsx",["35"],"E:\\Work\\Projects\\online_IT_kamasutra\\Todo_2.4\\src\\Todolist.tsx",["36","37","38","39","40"],"E:\\Work\\Projects\\online_IT_kamasutra\\Todo_2.4\\src\\api\\todolist-api.ts",[],{"ruleId":"41","severity":1,"message":"42","line":1,"column":29,"nodeType":"43","messageId":"44","endLine":1,"endColumn":39},{"ruleId":"41","severity":1,"message":"45","line":1,"column":41,"nodeType":"43","messageId":"44","endLine":1,"endColumn":49},{"ruleId":"41","severity":1,"message":"46","line":13,"column":5,"nodeType":"43","messageId":"44","endLine":13,"endColumn":21},{"ruleId":"41","severity":1,"message":"47","line":15,"column":73,"nodeType":"43","messageId":"44","endLine":15,"endColumn":85},{"ruleId":"41","severity":1,"message":"48","line":32,"column":9,"nodeType":"43","messageId":"44","endLine":32,"endColumn":20},{"ruleId":"41","severity":1,"message":"49","line":33,"column":9,"nodeType":"43","messageId":"44","endLine":33,"endColumn":20},{"ruleId":"50","severity":1,"message":"51","line":42,"column":8,"nodeType":"52","endLine":42,"endColumn":10,"suggestions":"53"},{"ruleId":"50","severity":1,"message":"51","line":47,"column":8,"nodeType":"52","endLine":47,"endColumn":10,"suggestions":"54"},{"ruleId":"50","severity":1,"message":"51","line":52,"column":8,"nodeType":"52","endLine":52,"endColumn":10,"suggestions":"55"},{"ruleId":"50","severity":1,"message":"51","line":57,"column":8,"nodeType":"52","endLine":57,"endColumn":10,"suggestions":"56"},{"ruleId":"50","severity":1,"message":"51","line":62,"column":8,"nodeType":"52","endLine":62,"endColumn":10,"suggestions":"57"},{"ruleId":"50","severity":1,"message":"51","line":67,"column":8,"nodeType":"52","endLine":67,"endColumn":10,"suggestions":"58"},{"ruleId":"50","severity":1,"message":"51","line":72,"column":8,"nodeType":"52","endLine":72,"endColumn":10,"suggestions":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":4,"column":1,"nodeType":"66","endLine":6,"endColumn":2},{"ruleId":"50","severity":1,"message":"67","line":35,"column":8,"nodeType":"52","endLine":35,"endColumn":33,"suggestions":"68"},{"ruleId":"50","severity":1,"message":"67","line":42,"column":8,"nodeType":"52","endLine":42,"endColumn":45,"suggestions":"69"},{"ruleId":"50","severity":1,"message":"67","line":44,"column":86,"nodeType":"52","endLine":44,"endColumn":116,"suggestions":"70"},{"ruleId":"50","severity":1,"message":"67","line":45,"column":92,"nodeType":"52","endLine":45,"endColumn":122,"suggestions":"71"},{"ruleId":"50","severity":1,"message":"67","line":46,"column":98,"nodeType":"52","endLine":46,"endColumn":128,"suggestions":"72"},"@typescript-eslint/no-unused-vars","'useReducer' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'todolistsReducer' is defined but never used.","'tasksReducer' is defined but never used.","'todolistId1' is assigned a value but never used.","'todolistId2' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["73"],["74"],["75"],["76"],["77"],["78"],["79"],"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["82"],["83"],["84"],["85"],["86"],{"desc":"87","fix":"88"},{"desc":"87","fix":"89"},{"desc":"87","fix":"90"},{"desc":"87","fix":"91"},{"desc":"87","fix":"92"},{"desc":"87","fix":"93"},{"desc":"87","fix":"94"},"no-global-assign","no-unsafe-negation",{"desc":"95","fix":"96"},{"desc":"95","fix":"97"},{"desc":"95","fix":"98"},{"desc":"95","fix":"99"},{"desc":"95","fix":"100"},"Update the dependencies array to be: [dispatch]",{"range":"101","text":"102"},{"range":"103","text":"102"},{"range":"104","text":"102"},{"range":"105","text":"102"},{"range":"106","text":"102"},{"range":"107","text":"102"},{"range":"108","text":"102"},"Update the dependencies array to be: [props]",{"range":"109","text":"110"},{"range":"111","text":"110"},{"range":"112","text":"110"},{"range":"113","text":"110"},{"range":"114","text":"110"},[1456,1458],"[dispatch]",[1632,1634],[1841,1843],[2055,2057],[2259,2261],[2411,2413],[2595,2597],[1177,1202],"[props]",[1415,1452],[1542,1572],[1666,1696],[1796,1826]]